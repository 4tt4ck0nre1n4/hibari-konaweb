---
// import { Image } from "astro:assets";
// import mouse from "/public/assets/mouse.png"; // ファイルが存在しないためコメントアウト

interface Slider {
  id: number;
  title: string;
  slug: string;
  acf: {
    slider_image: string;
    slider_title: string;
  };
}

let sliders: Slider[] = [];

try {
  const resSlider = await fetch(
    `${import.meta.env.PUBLIC_API_URL}sliders?acf_format=standard&_fields=id,title,slug,acf`,
    {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
      },
      // タイムアウトを設定
      signal: AbortSignal.timeout(5000)
    }
  );

  if (resSlider.ok) {
    const data = (await resSlider.json()) as unknown as Slider[];

    if (!Array.isArray(data)) {
      console.warn("Expected an array of posts, but received:", data);
    } else {
      sliders = data;
    }
  } else {
    console.warn("Failed to fetch slider data:", resSlider.status);
  }
} catch (error) {
  if (error instanceof Error) {
    if (error.name === 'AbortError') {
      console.warn("Slider data fetch timed out");
    } else {
      console.warn("Error fetching slider data:", error.message);
    }
  }
  // Continue with empty array
}
---

<div class="swiper">
  <ul class="swiper-wrapper">
    {
      sliders.map((slider) => (
        <li class="swiper-slide">
          <a href="/works">
            <img
              src={slider.acf?.slider_image}
              alt={slider.acf?.slider_title}
              width="160"
              height="90"
              loading="lazy"
              decoding="async"
            />
          </a>
        </li>
      ))
    }
  </ul>
</div>

<div class="mousePad">
  <button id="js-mouse" class="mouse" type="button" aria-label="マウス">
    <img id="mouse-image" src="/assets/mouse.png" alt="mouse" loading="lazy" decoding="async" />
  </button>
</div>

<div class="block"></div>
<!-- <div></div> -->

<script>
  import Swiper from "swiper";
  import { Navigation, Autoplay } from "swiper/modules";
  import "swiper/css/bundle";

  const initSwiper = () => {
    new Swiper(".swiper", {
      direction: "vertical",
      modules: [Navigation, Autoplay],
      loop: true,
      effect: "creative",
      speed: 1500,
      allowTouchMove: false,
      autoplay: {
        delay: 3000,
        disableOnInteraction: false,
      },
      navigation: {
        nextEl: "#js-mouse",
      },
    });
  };

  // マウス画像のエラーハンドリング
  const handleMouseImageError = () => {
    const mouseImage = document.getElementById("mouse-image") as HTMLImageElement;
    if (mouseImage) {
      mouseImage.style.display = "none";
    }
  };

  if (typeof window !== "undefined") {
    initSwiper();

    // マウス画像のエラーイベントリスナーを追加
    const mouseImage = document.getElementById("mouse-image") as HTMLImageElement;
    if (mouseImage) {
      mouseImage.addEventListener("error", handleMouseImageError);
    }
  }
</script>

<style>
  .swiper {
    width: 100%;
    max-width: 320px;
    height: 240px;
    overflow: hidden;
    background: transparent;
    box-shadow: 0 8px 16px rgba(0 0 0 / 0.6);
    border-radius: 1rem;
    /* background-image: url({pcImageSvg}); */
    background-image: url("/assets/pc.svg");
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
  }

  .swiper-wrapper {
  }

  .swiper-slide {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    position: relative;
    padding-block: 0.5rem;
  }

  .swiper-slide img {
    width: 180px;
    height: 120px;
    object-fit: contain;
    padding-block: 1rem;
  }

  .pc__slider_link {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    max-width: 280vw;
    height: 220px;
    color: #000;
    text-shadow: 0 0 5px purple;
  }

  .mousePad {
    display: flex;
    justify-content: flex-end;
    align-items: flex-start;
    padding-inline-end: 1.5rem;
  }

  #js-mouse {
    width: 40%;
    background: transparent;
    border: transparent 1px solid;
    box-shadow: 0 8px 24px rgba(0 0 0 / 0.6);
    border-radius: 1rem;
    margin-block-start: 0.5rem;
    padding: 0.25rem;
  }

  #js-mouse img {
    width: 80px;
    height: 80px;
    object-fit: contain;
    cursor: pointer;
    transition: all 0.3s ease-out;
  }

  #js-mouse img:is(:hover, :focus-visible) {
    transform: rotate(8deg) translateX(16px);
  }

  .block {
    width: 100%;
    height: 148px;
    /* height: auto; */
    background: transparent;
    box-shadow: 0 8px 16px rgba(0 0 0 / 0.6);
    border-radius: 1rem;
    margin-block-start: 0.5rem;
    margin-inline: auto;
  }
</style>
