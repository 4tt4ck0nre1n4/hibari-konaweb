---
const ariaLabelThemeButton = "テーマを切り替える（ライトモード・ダークモード）";
const ariaTitleThemeButton = "テーマを切り替える";
---

<button id="themeToggle" type="button" aria-label={ariaLabelThemeButton} title={ariaTitleThemeButton}>
  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 512 512">
    <defs>
      <symbol id="meteoconsClearDay0" class="sun" viewBox="0 0 375 375" aria-hidden="true" role="presentation">
        <circle
          class="sun"
          cx="187.5"
          cy="187.5"
          r="84"
          fill-rule="evenodd"
          stroke="#fbbf24"
          stroke-miterlimit="10"
          stroke-width="15"></circle>
        <path
          class="sun"
          fill-rule="evenodd"
          stroke="#fbbf24"
          stroke-linecap="round"
          stroke-miterlimit="10"
          stroke-width="15"
          d="M187.5 57.2V7.5m0 360v-49.7m92.2-222.5l35-35M60.3 314.7l35.1-35.1m0-184.4l-35-35m254.5 254.5l-35.1-35.1M57.2 187.5H7.5m360 0h-49.7"
        >
          <animateTransform
            additive="sum"
            attributeName="transform"
            dur="6s"
            repeatCount="indefinite"
            type="rotate"
            values="0 187.5 187.5; 45 187.5 187.5"></animateTransform>
        </path>
      </symbol>
    </defs>
    <use width="360" height="360" href="#meteoconsClearDay0" transform="translate(68.5 68.5)" aria-hidden="true"> </use>

    <defs>
      <symbol id="meteoconsClearNight0" class="moon" viewBox="0 0 279 279" aria-hidden="true" role="presentation">
        <path
          class="moon"
          fill-rule="evenodd"
          stroke="#72b9d5"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="15"
          d="M256.8 173.1A133.3 133.3 0 0 1 122.4 40.7A130.5 130.5 0 0 1 127 7.5A133 133 0 0 0 7.5 139.1c0 73.1 60 132.4 134.2 132.4c62.5 0 114.8-42.2 129.8-99.2a135.6 135.6 0 0 1-14.8.8Z"
        >
          <animateTransform
            additive="sum"
            attributeName="transform"
            dur="6s"
            repeatCount="indefinite"
            type="rotate"
            values="-15 135 135; 9 135 135; -15 135 135"
          >
          </animateTransform>
        </path>
      </symbol>
    </defs>
    <use width="279" height="279" href="#meteoconsClearNight0" transform="translate(116.5 116.5)" aria-hidden="true">
    </use>
  </svg>
</button>

<style is:global>
  #themeToggle {
    display: flex;
    background: transparent;
    border: 0;
    padding: 0;
  }

  #themeToggle svg {
    transition:
      transform 0.1s ease,
      box-shadow 0.4s ease;
  }

  #themeToggle svg:is(:hover, :focus-visible) {
    transform: scale(0.95);
  }

  .sun {
    display: block;
    fill: #ffffff;
    fill: transparent;
  }
  .moon {
    display: none;
  }

  @media (prefers-color-scheme: dark) {
    .sun {
      display: none;
    }
    .moon {
      display: block;
      fill: #ffffff;
    }
  }
</style>

<script is:inline>
  const sun = document.querySelectorAll(".sun");
  const moon = document.querySelectorAll(".moon");

  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    } else if (window.matchMedia("(prefers-color-scheme: light)").matches) {
      return "light";
    }
  })();

  const toggleIcons = (theme) => {
    if (theme === "light") {
      sun.forEach((icon) => (icon.style.display = "block"));
      moon.forEach((icon) => (icon.style.display = "none"));
    } else {
      sun.forEach((icon) => (icon.style.display = "none"));
      moon.forEach((icon) => (icon.style.display = "block"));
    }
  };

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  toggleIcons(theme);

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    const newTheme = isDark ? "dark" : "light";
    localStorage.setItem("theme", newTheme);

    toggleIcons(newTheme);

    console.log(newTheme);
  };

  document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
</script>
