---
import Favicon from "../components/Favicon.astro";
// reset.css と global.css を通常通りインポート（Astroが最適化）
import "../styles/reset.css";
import "../styles/global.css";
import globalText from "../data/globalText.json";

interface Props {
  title: string;
  description: string;
  ogType: string;
  ogTitle: string;
  ogDescription: string;
  twitterTitle: string;
  twitterDescription: string;

  jsonLd?: string | undefined;
}

const { title, description, ogType, ogTitle, ogDescription, twitterTitle, twitterDescription, jsonLd } = Astro.props;
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta
      http-equiv="Content-Security-Policy"
      content="default-src 'self'; script-src 'self' 'wasm-unsafe-eval' 'unsafe-inline' https://cdn.jsdelivr.net https://unpkg.com https://hibari-konaweb.netlify.app https://hibari-konaweb.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; img-src 'self' data: blob: http://hibari-konaweb.local https://cdn.jsdelivr.net https://hibari-konaweb.com https://hibari-konaweb.netlify.app; font-src 'self' https://fonts.gstatic.com data:; connect-src 'self' blob: data: https://unpkg.com https://cdn.jsdelivr.net https://api.iconify.design https://hibari-konaweb.com https://hibari-konaweb.netlify.app; worker-src 'self' blob:; media-src 'self' blob:; object-src 'none';"
    />
    <title>{title}</title>
    <meta name="description" content={description} />
    <Favicon />
    <link rel="sitemap" href={globalText.link.sitemap} />
    <meta name="generator" content={Astro.generator} />
    <meta name="keywords" content={globalText.global.keywords} />
    <meta name="color-scheme" content={globalText.global.colorScheme} />
    <meta name="referrer" content={globalText.global.referrer} />
    <meta name="theme-color" content={globalText.global.themeColor} />
    <meta name="author" content={globalText.global.author} />
    <meta name="creator" content={globalText.global.creator} />
    <meta name="publisher" content={globalText.global.publisher} />
    <meta name="robots" content={globalText.global.robots} />
    <meta name="format-detection" content={globalText.global.formatDetection} />
    <link rel="canonical" href={globalText.link.canonical} />
    <link rel="author" href={globalText.link.author} />
    <meta name="application-name" content={globalText.global.applicationName} />
    <meta name="mobile-web-app-capable" content={globalText.global.mobileWebAppCapable} />
    <meta name="apple-mobile-web-app-title" content={globalText.global.appleMobileWebAppTitle} />
    <meta property="og:local" content={globalText.og.local} />
    <meta property="og:title" content={ogTitle} />
    <meta property="og:description" content={ogDescription} />
    <meta property="og:type" content={ogType} />
    <meta property="og:url" content={globalText.og.url} />
    <meta property="og:image" content={globalText.og.image} />
    <meta property="og:site_name" content={globalText.og.site_name} />
    <meta name="twitter:card" content={globalText.twitter.card} />
    <meta name="twitter:title" content={twitterTitle} />
    <meta name="twitter:description" content={twitterDescription} />
    <meta name="twitter:site" content={globalText.twitter.site} />
    <meta name="twitter:image" content={globalText.twitter.image} />

    <!-- Critical CSS インライン化 -->
    <style>
      /* 最小限のクリティカルCSS */
      *,
      *::before,
      *::after {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      html {
        font-family: system-ui, sans-serif;
        color: #020202;
        background-color: #f1f5f9;
        text-size-adjust: none;
        scrollbar-gutter: stable;
      }
      html.dark {
        color: #f1f5f9;
        background-color: #0d0950;
      }
      body {
        min-height: 100vh;
        line-height: 1.5;
        -webkit-font-smoothing: antialiased;
      }
      img,
      svg,
      video {
        max-width: 100%;
        display: block;
      }
      a {
        color: inherit;
        text-decoration: none;
      }
      #outer-container {
        height: 100%;
      }
      #page-wrap {
        margin-block-start: 3rem;
        position: relative;
        z-index: 1;
      }
    </style>

    {
      typeof jsonLd === "string" && jsonLd.trim() !== "" && (
        <script is:inline type="application/ld+json" set:html={jsonLd} />
      )
    }
    <!-- <link rel="preload" href="/wasm/rive.wasm" as="fetch" type="application/wasm" crossorigin="anonymous" /> -->

    <!-- フォントは@fontsource/poppinsをLayout.astroでインポート済み -->

    <!-- ページ固有の追加head要素（LCP最適化など） -->
    <slot name="head" />

    <!-- 非クリティカルCSSの読み込みを遅延させるヘルパー -->
    <script is:inline>
      // preload with media="print" hack のフォールバック
      (function () {
        const links = document.querySelectorAll('link[rel="preload"][as="style"]');
        links.forEach((link) => {
          if (link.onload === null) {
            link.onload = function () {
              this.onload = null;
              this.rel = "stylesheet";
            };
          }
        });
      })();
    </script>
  </head>
</html>
